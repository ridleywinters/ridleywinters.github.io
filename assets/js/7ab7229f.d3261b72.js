"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[719],{9068:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>c,frontMatter:()=>a,metadata:()=>r,toc:()=>h});var i=n(4848),s=n(8453);const a={sidebar_position:-1},o="Design Doc",r={id:"snowfall/index",title:"Design Doc",description:"This is an internal design document intended to help contributors understand the goals of the Snowfall project and how to contribute in a way that will lead to a cohesive content and game implementation.",source:"@site/docs/snowfall/index.md",sourceDirName:"snowfall",slug:"/snowfall/",permalink:"/docs/snowfall/",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/snowfall/index.md",tags:[],version:"current",sidebarPosition:-1,frontMatter:{sidebar_position:-1},sidebar:"snowfallSidebar",next:{title:"References",permalink:"/docs/snowfall/references"}},l={},h=[{value:"Vision",id:"vision",level:2},{value:"Story",id:"story",level:2},{value:"Gameplay",id:"gameplay",level:2},{value:"Overview",id:"overview",level:3},{value:"Gameplay styles",id:"gameplay-styles",level:3},{value:"Adventurer",id:"adventurer",level:4},{value:"Explorer",id:"explorer",level:4},{value:"Builder",id:"builder",level:4},{value:"Fighter",id:"fighter",level:4},{value:"Principles",id:"principles",level:3},{value:"Mechanics",id:"mechanics",level:3},{value:"Fighting",id:"fighting",level:4},{value:"Roadmap",id:"roadmap",level:2},{value:"v0.1",id:"v01",level:3}];function d(e){const t={a:"a",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",img:"img",input:"input",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"design-doc",children:"Design Doc"})}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.em,{children:"This is an internal design document intended to help contributors understand the goals of the Snowfall project and how to contribute in a way that will lead to a cohesive content and game implementation"}),"."]}),"\n",(0,i.jsx)(t.h2,{id:"vision",children:"Vision"}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{src:n(8339).A+"",width:"1024",height:"1024"})}),"\n",(0,i.jsx)(t.p,{children:"Snowfall..."}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Is a story-driven adventure game"})," placed in on the fictional universe of Galthea, which is an open source world defined by a standard canon of coherent and cohesive ",(0,i.jsx)(t.em,{children:"possibilities"}),".  It is a world defined by ",(0,i.jsx)(t.em,{children:"legend"})," where the cannonical history lacks certainty of how things really were opening up the opportunity for every playthrough to have its own unique take on that history."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Has a lighthearted tone and feel akin to modern fairy tales"})," rather than low or high fantasy. It borrows some of the feel of the ",(0,i.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/King%27s_Quest_I",children:"classic King's Quest adventure games"}),".  The general design is friendly and positive, even if the world of Galthea has it's dangers and complexities as well."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Has a procedurally generated world of interconnected people, locations, politics, and quests"})," at a global scale, akin to the promise of the ",(0,i.jsx)(t.a,{href:"https://en.uesp.net/wiki/Daggerfall:Daggerfall",children:"classic game Daggerfall"}),"."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Is presented in a open, editable voxel-based world"})," in the spirit of Minecraft but with a style closer to more modern games like ",(0,i.jsx)(t.a,{href:"https://store.steampowered.com/app/2776090/Lay_of_the_Land/",children:"Lay of the Land"}),"."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:'Contains simulation and "city-building" elements'})," that dynamically change the world, giving players the chance to build and make a home within the world as well as follow the main storyline."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Exists in a ever reincarnating world"})," where each playthrough is bound to a timer where cosmic force known as the Maelstrom will inevitably end the world. Each iteration expands the basis and seeding of the next iteration, influencing it but still allowing it to be unique."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Uses a publishing model of distributions of the game separate from the core engine"})," similar to ",(0,i.jsx)(t.a,{href:"https://www.minetest.net/",children:"Minetest"}),'. The core engine ships with the ability to choose distributions and/or toggle individual mods. There is an "official" game distribution emphasizing stability and design consistency  but anyone can create their own distribution.']}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Is designed to be easy to contribute to"})," by making it trivial to edit, export, and refine content within the game itself for use as a mod in other playthroughs.  Anyone who knows who to play the game should be able to create and derive valuable new content."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Uses a deck of cards metaphor to define the procedural generation"}),'. Conceptually when a new region, character, item, quest or other element is needed it is selected randomly from a compatible cards in the game\'s deck.  This metaphor makes it easier to build and customize "distributions" tailored to different gameplay.']}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Emphasizes exploration, acquisition of knowledge, and better items as the means of progression"})," over a character stats and experience points and leveling based approach.  Knowledge, explorations, and items unlock new interactions and possibilities and not simply scores and numbers to drive higher."]}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"story",children:"Story"}),"\n",(0,i.jsx)(t.p,{children:'The player takes the role of Kestrel. They are an android "awakes" alone and learns they have been created by Tristan, the last Great Artificial Intelligence in the world of Galthea. Tristan is also known as "The Defender" as his role has been to protect civilization from the Maelstrom, a strange cosmic force that is distorting and disintegrating reality, often blending into dreams and other worlds and unrealities. Kestrel discovers Tristan has gone missing after uncounted centuries of protecting civilization -- and the means of how Tristan kept the Maelstrom at bay have been lost.  Kestrel seeks to find her maker while much of the world seeks to find Tristan to discover a way to prevent the world\'s ending.'}),"\n",(0,i.jsx)(t.p,{children:"Kestrel is android that is mistaken for female human by strangers, though one that is sickly-pale, too thin, and considered strange looking in world of humans. She lives in a world where technology outside of the direct control of Tristan is rare and she is the only android she knows of. Because of this, she assumes Tristan created her for a purpose and her awakening is not coincidental to his disappearance."}),"\n",(0,i.jsx)(t.p,{children:"In the reincarnating world of Galthea, Kestrel is sometimes incarnates with a physique and voice more traditionally male. Sometimes they are androgynous.  Occasionally, they awake into a form considered beautiful by strangers (and how strangers in human world treats her with more favor in case!).  But she is always born a android that passes for human, seeking her maker."}),"\n",(0,i.jsx)(t.p,{children:"There are several stories of what happened to Tristan:"}),"\n",(0,i.jsx)(t.p,{children:"As the last Great Artificial Intelligence with no other beings of his kin to interact with, it is said he gradually went insane. He realized this was happening, seeing himself more and more obsessed with his story and role within humanity, imagining and forgetting things. So he created Kestrel to replace him: seeding a Lesser Intelligence in her as best he could -- but before he could awake her himself, he lost control of his own mind, wandered to the far, far north of Galthea in the reality distorting storms of the Maelstrom to collapse upon a throne of his own making within a cave buried in a ice-covered mountainside."}),"\n",(0,i.jsx)(t.p,{children:"Another story says that the Maelstrom finally infected Tristan. Knowing the cosmic force was slowly poisoning him, he put all his last efforts into creating Kestrel.  He then buried himself deep below the Sleeping Chambers in a distant city-state with the hope that Kestrel would gain the knowledge to still the infection of the Maelstrom and restore him. But circumstances went awry and the plan that Tristan was to leave for Kestrel never reached her."}),"\n",(0,i.jsx)(t.p,{children:"One more says that in the world-bending of the Maelstrom, part of Galthea was merged into another reality and Tristan was trapped far across its boundary. There he fights a great battle, not in weakness but at his greatest strength, trying to return back to the civilization he voweed to protect."}),"\n",(0,i.jsx)(t.p,{children:"There are many such legends that tell of the fate of Tristan."}),"\n",(0,i.jsx)(t.p,{children:"...though it is said that in all of them, even when Kestrel and Tristan are reunited, the Maelstrom can only at best be delayed and never fully stopped from consuming the world."}),"\n",(0,i.jsx)(t.h2,{id:"gameplay",children:"Gameplay"}),"\n",(0,i.jsx)(t.h3,{id:"overview",children:"Overview"}),"\n",(0,i.jsx)(t.p,{children:"As Kestrel, the main story line is to find Tristan.  The general game loop proceeds loosely as follows:"}),"\n",(0,i.jsxs)(t.ol,{children:["\n",(0,i.jsx)(t.li,{children:"Kestrel explores until coming upon a town or NPCs"}),"\n",(0,i.jsx)(t.li,{children:"Kestrel asks questions give some indirect clue as to where Tristan is"}),"\n",(0,i.jsx)(t.li,{children:'This a "lock & key" gameplay mechanism: each clue spawns a new quest to retrieve a "key" which will unlock the next quest, until a final key is the location of Tristan'}),"\n",(0,i.jsx)(t.li,{children:"Quests may involve finding items, finding other people in other towns, confirming rumors, etc. to gradually piece together the truth"}),"\n",(0,i.jsx)(t.li,{children:"In pursuing a quest, Kestrel may encounter enemies (to fight or flee), politics (that bar her from making progression until some other condition is satisified)"}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:'All the while, the Maelstrom is growing stronger. Newly generated regions and towns become stranger. Random enemies and dangerous locations become more common and stronger. The game ends in one of two ways: the "countdown" concludes and the Maelstrom consumes Galthea or the player discovers Tristan and the story is complete.'}),"\n",(0,i.jsx)(t.p,{children:"The above describes the main quest line. In interacting with NPCs and locations, side quests may also be generated as well.  These may lead Kestrel to new equipement, give her additional information, gain her favor with factions and alliances, simply lead her to new territory."}),"\n",(0,i.jsx)(t.p,{children:"Notes:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:'The game always "ends" but should not emphasize winning. Even in finding Tristan, the game world still restarts with a reseeding after the Maelstrom consumes the world.  The player should not be penalized for choosing not to or being unable to finish the main story line. There should be rewards in any type of playthrough evidenced in its impact on the next iteration of the world.'}),"\n",(0,i.jsxs)(t.li,{children:["In the procedurally generated world, it is ",(0,i.jsx)(t.em,{children:"possible"})," that it may be ",(0,i.jsx)(t.em,{children:"impossible"})," to find Tristan. This should not be a common case, but the game implementation does not have to exhaustive evaluate that finding Tristan is always possible (e.g. the player kills a key NPC in a way that makes necessarily information inaccessible)."]}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"gameplay-styles",children:"Gameplay styles"}),"\n",(0,i.jsx)(t.p,{children:"Snowfall is intended to encourage the following gameplay styles including combinations of them:"}),"\n",(0,i.jsx)(t.h4,{id:"adventurer",children:"Adventurer"}),"\n",(0,i.jsx)(t.p,{children:"Follow the storyline and try to find Tristan before the Maelstrom destroys the world of Galthea"}),"\n",(0,i.jsx)(t.h4,{id:"explorer",children:"Explorer"}),"\n",(0,i.jsx)(t.p,{children:"Wander the world and discover intriguing things. Capture pictures and discover lore.  These images and lore, the story of their world is captured in player Journal.  If the world is ending, someone needs to document its mysteries before its demise."}),"\n",(0,i.jsx)(t.p,{children:"The Journal then can be uploaded to the online community to viewed by others -- parts of that Journal can even be used to create new cards and mods for future content in the distribution.  Thus the Explorer contributes the broader evolution of the world of Galthea."}),"\n",(0,i.jsx)(t.h4,{id:"builder",children:"Builder"}),"\n",(0,i.jsxs)(t.p,{children:["Build a garden, a town, or quiet forest grove within a private corner of the world.  The Builder knows this will not stop the Maelstrom altogether, but is creating a alcove of beauty and control that it cannot touch and ",(0,i.jsx)(t.em,{children:"will"})," impact future incarnations of the world."]}),"\n",(0,i.jsx)(t.p,{children:"These creations likewise can be saved to the player Journal to be browsed or even directly included by others in their game play."}),"\n",(0,i.jsx)(t.h4,{id:"fighter",children:"Fighter"}),"\n",(0,i.jsx)(t.p,{children:"The Fighter applies a more traditional, old-school fight & loot approach to Snowfall. They seek out quests that will give them items, experience, and wealth that will make them ever more capable against the malicious entities spawned by the Maelstrom."}),"\n",(0,i.jsx)(t.p,{children:"They will become heroes that, it is said, may be reincarnated as NPCs in future incarnations of the world, showing up to help Kestrel in quests in future timelines of Galthea."}),"\n",(0,i.jsx)(t.h3,{id:"principles",children:"Principles"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:'Encourage discovery. Discourage repeition. "Grinding" by repeating the same task should not reward the new player - unless it is a task that leads to novel outcomes every time.'}),"\n",(0,i.jsx)(t.li,{children:'Encourage chance over balance. The procedural world is based on likelihoods, not certainties. Imbalanced and "unfair" outcomes can happen at any time.  The iterative cycle of the world should account for this so the net experience of many playthroughs balances out the extremes that may occur in a single playthrough.'}),"\n",(0,i.jsx)(t.li,{children:"Keep obvious interactgions simple. For example, if in an interaction a player obviously wants to dig, they should not have to equip a shovel they already have: that should happen automatically. If they don't have a shovel, the UI should tell them that is why they can't dig as well as hint at the next step."}),"\n",(0,i.jsx)(t.li,{children:"Make the inner working of the gameplay transparent. NPC motives should be blunt and obvious. The real world is very subtle and complex. This is a game: the actions of characters in the world should be clear and not written between the lines. This does not mean they can't be interesting: it just shouldn't require to indirectly infer complex motives. In a procedurally generated world, it is particularly hard to discern the what & why -- so be a bit blunt about it."}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"mechanics",children:"Mechanics"}),"\n",(0,i.jsx)(t.h4,{id:"fighting",children:"Fighting"}),"\n",(0,i.jsx)(t.p,{children:'In a battle, a player chooses a "fighting strategy". This is sort of script that determines how the player will attack and defend.  Likewise, the enemy has such as script. The battle then is automated based on those scripts. If the player is severely hurt in the automated play, they are given the opportunity to choose a "saving strategy" -- basically a chance to change their strategy before death.  The set of strategies available to a player is determined by their items, skills, knowledge, and prior actions.'}),"\n",(0,i.jsx)(t.p,{children:"This same mechanic is used for NPC-NPC battles and group battles."}),"\n",(0,i.jsx)(t.p,{children:'Fighting strategies are individual "cards" that can be included in a deck.'}),"\n",(0,i.jsx)(t.h2,{id:"roadmap",children:"Roadmap"}),"\n",(0,i.jsx)(t.h3,{id:"v01",children:"v0.1"}),"\n",(0,i.jsx)(t.p,{children:"Concurrently work on:"}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:"Snowfield"})," - a 2D prototype of the ",(0,i.jsx)(t.em,{children:"gameplay"})," mechanisms of Snowfall, with intentional deemphasis regarding graphics and physics"]}),"\n",(0,i.jsxs)(t.ul,{className:"contains-task-list",children:["\n",(0,i.jsxs)(t.li,{className:"task-list-item",children:[(0,i.jsx)(t.input,{type:"checkbox",disabled:!0})," ","Core gameplay"]}),"\n"]}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:"snowfall-engine"})," - learning WGPU, Rust. Intended to be a voxel engine specifically for the requirements of Snowfall, ",(0,i.jsx)(t.em,{children:"not"})," a general game engine (like Bevy, for example)"]}),"\n",(0,i.jsxs)(t.ul,{className:"contains-task-list",children:["\n",(0,i.jsxs)(t.li,{className:"task-list-item",children:[(0,i.jsx)(t.input,{type:"checkbox",disabled:!0})," ","Voxel-rendering engine"]}),"\n",(0,i.jsxs)(t.li,{className:"task-list-item",children:[(0,i.jsx)(t.input,{type:"checkbox",disabled:!0})," ","Plug-in system"]}),"\n",(0,i.jsxs)(t.li,{className:"task-list-item",children:[(0,i.jsx)(t.input,{type:"checkbox",disabled:!0})," ","Base set of assets"]}),"\n"]})]})}function c(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8339:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/snowfall-concept-art-00-91c560d36041fb08fd2a6df5c4cfc649.webp"},8453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>r});var i=n(6540);const s={},a=i.createContext(s);function o(e){const t=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(a.Provider,{value:t},e.children)}}}]);